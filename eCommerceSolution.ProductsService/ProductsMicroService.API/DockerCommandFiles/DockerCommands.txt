 docker build -t my-dotnet-product-app:initial -f ./ProductsMicroService.API/Dockerfile .
 docker run -p 8080:8080 -p 8081:8081 my-dotnet-product-app:initial

 //For Docker hub push build command
  docker build -t products-microservice:1.0 -f ./ProductsMicroService.API/Dockerfile .

  //Docker hub tag addition 
 docker tag products-microservice:1.0 dineshvaddn/ecommerce-products-microservice:v1.0

 //Push the image to Docker hub 
 docker push dineshvaddn/ecommerce-products-microservice:v1.0

 //pull the image to Docker hub 
 docker pull dineshvaddn/ecommerce-products-microservice:v1.0

 //create a network for the microservice
 docker network create productmicroservice-network

 //List the networks to verify creation
 docker network ls

 //Inspect the created network
 docker network inspect productmicroservice-network

 //Run MYSQL container for product microservice in the created network
 docker run -it -e MYSQL_ROOT_PASSWORD=admin  -p 3306:3306 --hostname=mysql-host-productmicroservice --network=productmicroservice-network mysql:latest

 //Run the product microservice in the created network
  docker run -p 8080:8080 --network=productmicroservice-network dineshvaddn/ecommerce-products-microservice:v1.0

  //Run the product microservice with environment variables for MySQL connection
   docker run -p 8080:8080 --network=productmicroservice-network -e MYSQL_HOST=mysql-host-productmicroservice -e MYSQL_PASSWORD=admin dineshvaddn/ecommerce-products-microservice:v1.0

   //Run the product microservice with environment variables for MySQL connection and additional port
   docker run -it -e MYSQL_ROOT_PASSWORD=admin -p 3306:3306 --hostname=mysql-host-productmicroservice --network=productmicroservice-network -v "D:\UdemyMicroServiceCourse\eCommerceSolution.ProductsService\DataAccessLayer\MySQLScripts:/docker-entrypoint-initdb.d" mysql:latest

   //Running Docker Compose yaml file which will run both MySQL and Product,User(will be added soon.) Microservices automatically
   D:\UdemyMicroServiceCourse>docker-compose -f docker-compose.yaml up